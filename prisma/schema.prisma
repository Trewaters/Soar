// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb" // or your database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "/generated/client"
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  password       String?
  image          String?
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            String @db.ObjectId
  user              User   @relation(fields: [userId], references: [id])
}

model Session {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Practitioner {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  pronouns     String
  emailPublic  String
  emailInternal  String
  emailAlternate  String
  phoneContact        String
  bio        String
  headline      String
  yogaStyle         String
  yogaExperience        String
  Facebook      String
  Google        String
  Patreon       String
  Twitch        String
  Twitter       String
  websiteURL    String
  blogURL       String
  socialURL     String
  streamingURL  String
  isInstructor  String
  isStudent     String
  isPrivate     String
  calendar       String
  timezone       String
  location       String
  isLocationPublic       String
  exportAccountInfo       String
  deleteAccountInfo       String
  deleteAccountInfo       String
  company       String
  userId        String @db.ObjectId
  user         User   @relation(fields: [userId], references: [id])
}